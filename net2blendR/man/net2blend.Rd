% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/net2blendfuncs.R
\name{net2blend}
\alias{net2blend}
\title{Export network files}
\usage{
net2blend(
  net,
  layout,
  vertex.color = "red",
  edge.color = "black",
  vertex.shape = "sphere",
  vertex.size = 0.2,
  edge.size = 0.1,
  edge.3d = T,
  edge.curve = 0,
  edge.forcecurve = F,
  maxlength = NA,
  vertex.intersect = T,
  vertex.edgeshorten = 0,
  edge.arrows = F,
  edge.arrowsize = 0,
  edge.arrowlength = 0,
  edge.dash = 0,
  edge.isdashed = F,
  zoffset1 = 0.01,
  zoffset2 = 0.05,
  outputdir = NA,
  netname = "net",
  netname2 = 0
)
}
\arguments{
\item{net}{igraph network object}

\item{layout}{Matrix or dataframe of the same number of rows as vertices
in the networks, where first column is vertex x coordinates
and second column is vertex y coordinates. Z coordinates can also be
provided.}

\item{vertex.color}{Vertex colour as hex or colour name.
Can be single value or vector the same length as the number of vertices
in the network. of Default is "red"}

\item{edge.color}{Edge colour as hex or colour name. Can be a single value or
a vector of the same length as the number of edges in the network.
Default is "black"}

\item{vertex.shape}{Name of vertex shape.  Can be single value or vector of
the same length as the number of vertices in the network.
Can be "sphere","cube","circle", "square" or "none".
Alternative, this can be the name of an object in the blender scene.
This object will be duplicated and rescaled as necessary. If the
object has no materials assigned, the object will also be recoloured.
Default is "sphere".}

\item{vertex.size}{Size of vertex object. Can be single value or vector of
the same length as the number of vertices in the network. Defaults to 0.2.}

\item{edge.size}{Size of edge. Can be a single value or a vector the same
length as the number of edges in the network. Default is 0.1}

\item{edge.3d}{Boolean determining if edges will be 3d in blender.
If FALSE will flatten this edge. Can be a single value or a vector the
same length as the number of edges in the network. Default is TRUE.}

\item{edge.curve}{Amount to curve edges. Can be a single value or a vector of
the same length as the number of edges in the network.
If a single value >0, the amount each edge curves will be scaled by the
length of the longest edge in the layout OR by \code{maxlength} if provided.}

\item{edge.forcecurve}{Boolean determining if edges will be forced to be
created as curves in blender, even if the edge is straight
(\code{edge.curve == 0}). Can be a single value or a vector of
the same length as the number of edges in the network. Defaults to FALSE.}

\item{maxlength}{If provided, a single value to scale \code{edge.curve} by.
Default is NA, meaning the length of the longest edge of the layout is used.}

\item{vertex.intersect}{Boolean. If TRUE edges will meet in the center of
the vertex. If FALSE edges will be shortened by size of vertex or by
\code{vertex.edgeshorten}. Can be a single value or a vector of
 the same length as the number of vertices in the network.
 Default is TRUE.}

\item{vertex.edgeshorten}{If provided, edges will be shortened by this value
instead of the size of the vertex. Can be a single value or a vector of
 the same length as the number of edges in the network. Default is 0.}

\item{edge.arrows}{Boolean. If TRUE, arrowheads are added at the end of
edges. Can be a single value or a vector of the same length as the number
of edges in the network. Default is FALSE.}

\item{edge.arrowsize}{Thickness of arrowheads. Can be a single value or a vector of
the same length as the number of edges in the network.
If \code{edge.arrows} is TRUE and no value is provided, defaults to
 \code{edge.size + 0.05}.}

\item{edge.arrowlength}{Length of arrowheads. Can be a single value or a vector of
the same length as the number of edges in the network.
If \code{edge.arrows} is TRUE and no value is provided, this defaults
to 0.2.}

\item{edge.dash}{Size of dashed edges. Can be a single value or a vector of
the same length as the number of edges in the network.
Larger values result in a greater number of short dashes. Defaults to 0.}

\item{edge.isdashed}{Boolean determining if edges will be forced to be set up
in Blender to allow dashed edges, even if \code{edge.dash == 0}}

\item{zoffset1}{Minimum amount to offset 2d edges (\code{edge.3d == FALSE})
below the Z axis by. Default is 0.01.}

\item{zoffset2}{Maximum amount to offset 2d edges (\code{edge.3d == FALSE})
below the Z axis by. Default is 0.05.}

\item{outputdir}{Directory in which to export the networks. Defaults to NA,
the working directory.}

\item{netname}{Network prefix name. Will be used as the network name in
Blender. Default is "net"}

\item{netname2}{Network suffix name. Can be used as frame number by blender.
Default is 0.}
}
\value{
Exports two files, one for edges (edata) and one for vertices (vdata).
    Files are named in the format netname_filetype_netname2.csv. See vignette
    for full R to Blender workflow and examples.
}
\description{
\code{net2blend} Exports networks in a format for importing into blender
}
\examples{
data(examplenet1)
l1=layout_nicely(examplenet1)
l1=l1*10
net2blend(examplenet1,l1,netname="examplenet")
}
